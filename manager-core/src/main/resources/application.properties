#连接池指定 springboot2.02版本默认使用HikariCP 此处要替换成Druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#JDBC配置
spring.datasource.druid.url=jdbc:mysql://localhost:3306/manager?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
#使用mysql8数据库驱动
spring.datasource.druid.driver=com.mysql.cj.jdbc.Driver
spring.datasource.druid.username=root
spring.datasource.druid.password=123456


#mybatis
mybatis.mapper-locations=classpath:mappers/*/*.xml
mybatis.type-aliases-package=com.lcadream.www.core.entity
#mapper
#mappers 多个接口时逗号隔开
mapper.plugin = tk.mybatis.mapper.generator.MapperPlugin
mapper.Mapper = tk.mybatis.mapper.common.Mapper
mapper.mappers=com.lcadream.www.core.common.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#连接池配置
#配置初始化大小、最小、最大
spring.datasource.druid.initial-size=1
#最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,
spring.datasource.druid.min-idle=10
#默认 不配置   最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,
#spring.datasource.druid.max-idle=15
#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量,
spring.datasource.druid.max-active=20
#配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
#配置间隔多久进行一次检测，检测需要关闭空闲连接，单位是毫秒  (在空闲连接回收器线程运行期间休眠的时间值)
spring.datasource.druid.time-between-eviction-runs-millis=2000
#配置一个连接在连接池中最小生存的时间，单位死毫秒
spring.datasource.druid.min-evictable-idle-time-millis=600000
#配置一个连接在连接池中最大生存的时间，单位是毫秒
spring.datasource.druid.max-evictable-idle-time-millis=900000
#SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.druid.validation-query=select 'x'
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个;设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.druid.test-on-borrow=true
#指明是否在归还到池中前进行检验 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.druid.test-on-return=false
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.druid.test-while-idle=true

spring.datasource.druid.keep-alive=true
spring.datasource.druid.phy-timeout-millis=1200000
#打开PSCache，并且指定每个连接上PSCache的大小  mysql 5.5之后建议true( 开启池的prepared statement 池功能)
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#statement池能够同时分配的打开的statements的最大数量,
spring.datasource.druid.max-open-prepared-statements=50
#如果设置为true, 连接被认为是被泄露并且可以被删除,如果空闲时间超过removeAbandonedTimeout.
#设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接.
spring.datasource.druid.remove-abandoned=true
# 泄露的连接可以被删除的超时值, 单位秒
spring.datasource.druid.remove-abandoned-timeout-millis=300
#标记当Statement或连接被泄露时是否打印程序的stack traces日志。
#被泄露的Statements和连接的日志添加在每个连接打开或者生成新的Statement,
#因为需要生成stack trace。
spring.datasource.druid.log-abandoned=true
spring.datasource.druid.filters=stat,wall
spring.datasource.druid.connect-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
